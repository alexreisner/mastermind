= Web Server (Ubuntu Hardy)

== First Steps

Change root password (logged in as root):

  passwd

Set locale:

  locale-gen en_US.UTF-8 && update-locale LANG=en_US.UTF-8

Update system:

  apt-get update && apt-get dist-upgrade -y

Set time zone:

  cp /etc/localtime /etc/localtime.bak
  ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime

Set host and mail name:

  echo '[hostname]' > /etc/hostname
  echo '[hostname]' > /etc/mailname

Create a developer user account and give sudo privileges.

  adduser [username] # then answer various prompts
  echo '[username] ALL=(ALL) ALL' >> /etc/sudoers

Disable root SSH login:

  sed -i 's/PermitRootLogin yes/PermitRootLogin no/g' /etc/ssh/sshd_config
  sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
  echo 'UseDNS no' >> /etc/ssh/sshd_config
  echo 'AllowUsers [username]' >> /etc/ssh/sshd_config
  /etc/init.d/ssh reload


== Public Key Authentication

Depending on your operating system and SSH client, an extra step may be required to have your key used automatically for logins. On OS X this may have something to do with the keychain (I'm not familiar with it).

On the server:

  mkdir ~/.ssh

Now on your local machine:

  # generate an RSA key:
  ssh-keygen -t rsa -f ~/.ssh/id_rsa
  
  # tell the server about it:
  ssh [user]@[server] 'cat >>.ssh/authorized_keys' <~/.ssh/id_rsa.pub
    <enter password>

You may also need to load a private key for authenticating to your code repositories.


== Basic Software

Install Apache, MySQL, and various tools like logrotate, curl, Git, ImageMagick, etc:

  sudo apt-get -y install mysql-server postfix imagemagick logrotate monit \
    build-essential curl git-core apache2-mpm-worker apache2-threaded-dev

Make vi the default editor:

  echo 'export EDITOR=vi' >> ~/.bashrc
  source ~/.bashrc


== Ruby (Enterprise Edition)

  sudo apt-get -y install libmysql-ruby1.8 libmysqlclient15-dev
  cd /usr/local/src
  sudo wget http://rubyforge.org/frs/download.php/68720/ruby-enterprise_1.8.7-2010.01_amd64.deb
  sudo dpkg -i ruby-enterprise_1.8.7-2010.01_amd64.deb


== Passenger

Install:

  sudo /usr/local/bin/passenger-install-apache2-module

Configure:

  sudo vi /etc/apache2/mods-available/passenger.load
  
  # add lines:
  LoadModule passenger_module /usr/local/lib/ruby/gems/1.8/gems/passenger-2.2.9/ext/apache2/mod_passenger.so
  PassengerRoot /usr/local/lib/ruby/gems/1.8/gems/passenger-2.2.9
  PassengerRuby /usr/local/bin/ruby

Create symlink and restart Apache:

  sudo ln -s /etc/apache2/mods-available/passenger.load /etc/apache2/mods-enabled/passenger.load
  sudo apache2ctl graceful
  
  
== Gems

  sudo gem source -a http://gems.github.com
  sudo gem install ruby-debug pony chronic javan-whenever


== MySQL Configuration

Use UTF-8:

  sudo vi /etc/mysql/my.cnf
  
  # add lines in [mysqld] section:
  character-set-server=utf8
  default-collation=utf8_unicode_ci
  # save and exit
  
  sudo /etc/init.d/mysql restart


== Apache Configuration
  
To GZip components, enable Apache's mod_deflate for CSS and JS:

  cd /etc/apache2/mods-enabled
  sudo ln -s ../mods-available/deflate.load
  sudo ln -s ../mods-available/deflate.conf

In mods-available/deflate.conf, add <tt>text/css application/x-javascript</tt>:

  cd /etc/apache2/mods-available
  sudo sed -i 's/text\/xml/text\/xml text\/css application\/x-javascript application\/javascript/g' deflate.conf
  
To add a far future 'Expires' header:

  cd /etc/apache2/mods-enabled
  sudo ln -s ../mods-available/rewrite.load
  sudo ln -s ../mods-available/expires.load
  
X-Sendfile module:

  cd /usr/local/src
  sudo wget http://tn123.ath.cx/mod_xsendfile/mod_xsendfile-0.9.tar.gz
  sudo tar -xf mod_xsendfile-0.9.tar.gz
  cd mod_xsendfile-0.9
  sudo apxs2 -cia mod_xsendfile.c
  sudo echo 'LoadModule xsendfile_module /usr/lib/apache2/modules/mod_xsendfile.so' \
    > /etc/apache2/mods-available/xsendfile.load
  cd /etc/apache2/mods-enabled
  sudo ln -s ../mods-available/xsendfile.load

Allow VirtualHosts only on port 80:

  sudo sed -i 's/NameVirtualHost \*/NameVirtualHost *:80/' /etc/apache2/sites-available/default
  sudo sed -i 's/<VirtualHost \*>/<VirtualHost *:80>/' /etc/apache2/sites-available/default

Restart:

  sudo apache2ctl graceful


== Postfix Configuration

Firstly, be sure to <b>configure reverse DNS</b> using the hosting provider's control panel. Failure to do so will result in massive email delivery failure.

Edit master config (<tt>/etc/postfix/master.cf</tt>). Replace first line with:

  127.0.0.1:smtp      inet  n       -       n       -       -       smtpd
  
Edit main config (<tt>/etc/postfix/main.cf</tt>):

  sudo postconf -e 'smtpd_reject_unlisted_recipient = no'
  sudo postconf -e 'mydestination = localhost.localdomain, localhost'
  sudo postconf -e 'smtpd_use_tls = no'

and reload:

  sudo /etc/init.d/postfix reload


== Cron

Configure email address to receive notifications (app user):

  crontab -e
  
  # add at top:
  MAILTO=alex@alexreisner.com
  PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  
Logrotate (for root user):

  sudo crontab -e

  # add:
  0 0  *  *  * /usr/sbin/logrotate /etc/logrotate.conf


== Web Sites

=== Apache VirtualHost

  <VirtualHost *:80>
    ServerName www.[domain]
    ServerAlias [domain]
    DocumentRoot [app_root]/public

    # allow x-sendfile:
    XSendFile on
    XSendFileAllowAbove on

    # technique for adding far future expires headers taken from:
    # http://pennysmalls.com/2007/10/19/adding-an-expires-header-with-apache-for-rails/
    RewriteEngine On

    # add something we can do a directory match on
    RewriteCond %{QUERY_STRING} ^[0-9]{10}$
    RewriteRule ^(.*)$ /with_expires_header%{REQUEST_URI} [QSA]

    # the with_expires_header directory is just a symlink to public
    <Directory "[app_root]/public/with_expires_header">
      ExpiresActive On
      ExpiresDefault "access plus 10 years"
    </Directory>
  </VirtualHost>


=== Log Rotation

Add /etc/logrotate.d/[app_name]:

  [app_root]/log/*.log {
    size 20M
    missingok
    rotate 10
    compress
    delaycompress
    notifempty
    copytruncate
  }


== Reboot & Verify

Do a soft reboot of the machine and make sure all services come up as expected:

# <tt>hostname</tt> should be correct
# <tt>ssh [hostname] 25</tt> should refuse connection
# all daemons should launch

